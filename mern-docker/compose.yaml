# version of docker-compose
version: "1.2"

#services/containers to be run
services:
  # name can be anything but standard convention is web,api,db
  web:
    # depends_on is used to specify one service relies on another
    # in this case, web depends on the api service and ensures to run the api container ahead 
    depends_on: 
      - api
    # specify the build context for the web service wher ethe dockerfile is located 
    build: ./frontend
    # port used to map the port from host to container 
    # first 5173 is host port and second 5173 is container port
    ports:
      - 5173:5173
    # environment variables needed for the web service
    # this can be accessed on the container
    environment:
      VITE_API_URL: http://localhost:8000

    # develop is used to monitor changes on target files and perform an action as mentioned
    develop:
      # specify the files to watch for changes
      watch:
        # it'll watch for changes in package.json and package-lock.json and rebuild the container if there are any changes
        - path: ./frontend/package.json
          action: rebuild
        - path: ./frontend/package-lock.json
          action: rebuild
        # it'll watch for changes in the frontend directory and sync the changes with the container real time
        - path: ./frontend
          target: /app
          action: sync

  # define the api service/container
  api: 
    # api service depends on the db service so the db service will be started before the api service
    depends_on: 
      - db

    # build context for the api service
    build: ./backend
    
    # same as front end
    ports: 
      - 8000:8000

    # environment variables needed for the api service
    environment: 
      DB_URL: mongodb://db/sample
    
    # docker compose watch mode for the api service
    develop:
      # specify the files to watch for changes
      watch:
        # it'll watch for changes in package.json and package-lock.json and rebuild the container and image if there are any changes
        - path: ./backend/package.json
          action: rebuild
        - path: ./backend/package-lock.json
          action: rebuild
        
        # it'll watch for changes in the backend directory and sync the changes with the container real time
        - path: ./backend
          target: /app
          action: sync

  # define the db service
  db:
    # the image to use for the db service from docker hub
    image: mongo:latest

    # mapping
    ports:
      - 27017:27017

    
    # we use "sample" volume for it
    volumes:
      - sample:/data/db

# the volumes to be used by the services
volumes:
  sample:
